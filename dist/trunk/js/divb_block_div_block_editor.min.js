(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';
/*
 * OBJECT ASSIGN DEEP
 * Allows deep cloning of plain objects that contain primitives, nested plain objects, or nested plain arrays.
 */

/*
 * A unified way of returning a string that describes the type of the given variable.
 */

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function getTypeOf(input) {
  if (input === null) {
    return 'null';
  } else if (typeof input === 'undefined') {
    return 'undefined';
  } else if (_typeof(input) === 'object') {
    return Array.isArray(input) ? 'array' : 'object';
  }

  return _typeof(input);
}
/*
 * Branching logic which calls the correct function to clone the given value base on its type.
 */


function cloneValue(value) {
  // The value is an object so lets clone it.
  if (getTypeOf(value) === 'object') {
    return quickCloneObject(value);
  } // The value is an array so lets clone it.
  else if (getTypeOf(value) === 'array') {
      return quickCloneArray(value);
    } // Any other value can just be copied.


  return value;
}
/*
 * Enumerates the given array and returns a new array, with each of its values cloned (i.e. references broken).
 */


function quickCloneArray(input) {
  return input.map(cloneValue);
}
/*
 * Enumerates the properties of the given object (ignoring the prototype chain) and returns a new object, with each of
 * its values cloned (i.e. references broken).
 */


function quickCloneObject(input) {
  var output = {};

  for (var key in input) {
    if (!input.hasOwnProperty(key)) {
      continue;
    }

    output[key] = cloneValue(input[key]);
  }

  return output;
}
/*
 * Does the actual deep merging.
 */


function executeDeepMerge(target) {
  var _objects = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  var _options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var options = {
    arrayBehaviour: _options.arrayBehaviour || 'replace' // Can be "merge" or "replace".

  }; // Ensure we have actual objects for each.

  var objects = _objects.map(function (object) {
    return object || {};
  });

  var output = target || {}; // Enumerate the objects and their keys.

  for (var oindex = 0; oindex < objects.length; oindex++) {
    var object = objects[oindex];
    var keys = Object.keys(object);

    for (var kindex = 0; kindex < keys.length; kindex++) {
      var key = keys[kindex];
      var value = object[key];
      var type = getTypeOf(value);
      var existingValueType = getTypeOf(output[key]);

      if (type === 'object') {
        if (existingValueType !== 'undefined') {
          var existingValue = existingValueType === 'object' ? output[key] : {};
          output[key] = executeDeepMerge({}, [existingValue, quickCloneObject(value)], options);
        } else {
          output[key] = quickCloneObject(value);
        }
      } else if (type === 'array') {
        if (existingValueType === 'array') {
          var newValue = quickCloneArray(value);
          output[key] = options.arrayBehaviour === 'merge' ? output[key].concat(newValue) : newValue;
        } else {
          output[key] = quickCloneArray(value);
        }
      } else {
        output[key] = value;
      }
    }
  }

  return output;
}
/*
 * Merge all the supplied objects into the target object, breaking all references, including those of nested objects
 * and arrays, and even objects nested inside arrays. The first parameter is not mutated unlike Object.assign().
 * Properties in later objects will always overwrite.
 */


module.exports = function objectAssignDeep(target) {
  for (var _len = arguments.length, objects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    objects[_key - 1] = arguments[_key];
  }

  return executeDeepMerge(target, objects);
};
/*
 * Same as objectAssignDeep() except it doesn't mutate the target object and returns an entirely new object.
 */


module.exports.noMutate = function objectAssignDeepInto() {
  for (var _len2 = arguments.length, objects = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    objects[_key2] = arguments[_key2];
  }

  return executeDeepMerge({}, objects);
};
/*
 * Allows an options object to be passed in to customise the behaviour of the function.
 */


module.exports.withOptions = function objectAssignDeepInto(target, objects, options) {
  return executeDeepMerge(target, objects, options);
};

},{}],2:[function(require,module,exports){
'use strict';
/*
 * OBJECT EXTENDER
 * A set of simple utilities for copying, merging and manipulating plain objects.
 */

var objectAssignDeep = require("object-assign-deep");
/*
 * Removes null and undefined values if the relevant options are set. Mutates the object passed in.
 */


function removeUndesirableProperties(object, options) {
  var ignoreNull = options.ignoreNull,
      ignoreUndefined = options.ignoreUndefined; // Nothing to ignore, nothing to do!

  if (!ignoreNull && !ignoreUndefined) {
    return object;
  } // Enumerate all the properties.


  for (var key in object) {
    if (!object.hasOwnProperty(key)) {
      continue;
    } // Step down into nested objects and tide those too.


    if (typeof object[key] === "object" && !Array.isArray(object[key])) {
      removeUndesirableProperties(object[key], options);
    } // Remove unwanted properties.
    else if (typeof object[key] === "undefined" && ignoreUndefined || object[key] === null && ignoreNull) {
        delete object[key];
      }
  }
}
/*
 * Takes an array of objects to merge and some optional configurable options.
 */


function extend(_objects) {
  var _options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var options = defaults({
    ignoreNull: true,
    ignoreUndefined: true,
    arrayBehaviour: "replace"
  }, _options);
  var target = {};
  var objects = []; // Optionally remove null and undefined values from all objects, excluding null values in the very first object.

  for (var index = 0; index < _objects.length; index++) {
    var useOptions = index === 0 ? defaults(options, {
      ignoreNull: false
    }) : options;
    var clonedObject = clone(_objects[index]);
    objects.push(removeUndesirableProperties(clonedObject, useOptions));
  } // Perform the merge.


  return objectAssignDeep.withOptions(target, objects, {
    arrayBehaviour: options.arrayBehaviour
  });
}
/*
 * Returns a new deep merge of all the given objects with all references broken and without mutating any of the objects.
 */


function merge() {
  return objectAssignDeep.noMutate.apply(objectAssignDeep, arguments);
}
/*
 * Merges the given objects into the target (first parameter) object, mutating the target object.
 */


function mergeInto(target) {
  for (var _len = arguments.length, objects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    objects[_key - 1] = arguments[_key];
  }

  return objectAssignDeep.apply(void 0, [target].concat(objects));
}
/*
 * Returns a new deep copy of the given object with all references broken.
 */


function clone(object) {
  return objectAssignDeep.noMutate(object);
}
/*
 * A useful method for passing lots of values into a function which need default values, and optionally some read-only
 * values too.
 *
 * [Param: defaultValues]
 *   An object containing default values.
 *
 * [Param: actualValues]
 *   An object containing the actual values that are being set.
 *
 * [Param: readOnlyValues]
 *   An optional object containing values which should not be changed.
 *
 * [Example]
 *   extender.defaults({
 *     prop1: `Hello`,
 * 		 prop2: `World`,
 *     prop3: `Node`,
 *		 special: null,
 *	 }, {
 *	 	 prop1: `Josh`,
 *		 prop2: `Cole`,
 *     special: false,
 *	 }, {
 *	   special: true,
 *	 });
 *
 * [Expected Output]
 *   {
 *     prop1: `Josh`,
 *     prop2: `Cole`,
 *     prop3: `Node`,
 *     special: true,
 *   }
 */


function defaults(defaultValues, actualValues) {
  var readOnlyValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return objectAssignDeep.noMutate(defaultValues, actualValues, readOnlyValues);
}
/*
 * Export.
 */


module.exports = {
  extend: extend,
  merge: merge,
  mergeInto: mergeInto,
  mixin: mergeInto,
  clone: clone,
  copy: clone,
  defaults: defaults
};

},{"object-assign-deep":1}],3:[function(require,module,exports){
"use strict";

var _objectExtender = _interopRequireDefault(require("object-extender"));

var _getDefault = _interopRequireDefault(require("./divb_block_div_block_editor/getDefault"));

var _parseSerialized = _interopRequireDefault(require("./divb_block_div_block_editor/parseSerialized"));

var _Container = _interopRequireDefault(require("./divb_block_div_block_editor/components/Container.jsx"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */
var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
/**
 * Internal dependencies
 */

var blockClassName = 'wp-block-divb-div-block';
registerBlockType('divb/div-block', {
  title: __('Div Block', 'divb'),
  icon: React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), React.createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z"
  })),
  // https://material.io/tools/icons/?icon=crop_din&style=baseline
  category: 'layout',
  description: __('Just a simple div Block.', 'divb'),
  supports: {
    html: true
  },
  attributes: {
    settings: {
      type: 'string',
      "default": JSON.stringify((0, _getDefault["default"])('settings', {}))
    }
  },
  edit: function edit(_ref) {
    var className = _ref.className,
        attributes = _ref.attributes,
        setAttributes = _ref.setAttributes;
    var align = attributes.align;
    var classNameSorted = className.split(' ').sort(function (a, b) {
      if (blockClassName === a) return 1;
      if (blockClassName === b) return -1;
      return 0;
    }).join(' ');

    var settings = _objectExtender["default"].merge((0, _getDefault["default"])('settings', {}), (0, _parseSerialized["default"])(attributes.settings));

    return React.createElement(React.Fragment, null, React.createElement(_Container["default"], {
      settings: settings,
      className: classNameSorted,
      setAttributes: setAttributes
    }));
  },
  save: function save(_ref2) {
    var attributes = _ref2.attributes;
    var className = attributes.className;

    var settings = _objectExtender["default"].merge((0, _getDefault["default"])('settings', {}), (0, _parseSerialized["default"])(attributes.settings));

    var classNameSorted = [className, blockClassName].join(' ');
    return React.createElement(React.Fragment, null, React.createElement(_Container["default"], {
      className: classNameSorted
    }));
  }
}); // const { createHigherOrderComponent } = wp.compose;
// const withCustomClassName = createHigherOrderComponent( ( BlockListBlock ) => {
//     return ( props ) => {
//     	// console.log( 'debug props', props );		// ??? debug
// 		if ( props.attributes.className &&
// 			props.attributes.className.split().some( _className => ['row','col'].includes( _className ) )
// 		) {
// 			return <BlockListBlock { ...props } className={ props.attributes.className } />;
//         } else {
//             return <BlockListBlock {...props} />
//         }
//     };
// }, 'withClientIdClassName' );
// wp.hooks.addFilter( 'editor.BlockListBlock', 'my-plugin/with-client-id-class-name', withCustomClassName )

},{"./divb_block_div_block_editor/components/Container.jsx":4,"./divb_block_div_block_editor/getDefault":5,"./divb_block_div_block_editor/parseSerialized":6,"object-extender":2}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectExtender = _interopRequireDefault(require("object-extender"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * WordPress dependencies
 */
var Component = wp.element.Component;
var InnerBlocks = wp.editor.InnerBlocks;
/**
 * Internal dependencies
 */

var Container =
/*#__PURE__*/
function (_Component) {
  _inherits(Container, _Component);

  function Container(props) {
    _classCallCheck(this, Container);

    return _possibleConstructorReturn(this, _getPrototypeOf(Container).apply(this, arguments));
  }

  _createClass(Container, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          setAttributes = _this$props.setAttributes;
      return React.createElement(React.Fragment, null, React.createElement("div", {
        className: className,
        style: setAttributes && {
          border: '1px dotted rgba( 0, 0, 0, 0.2)'
        }
      }, setAttributes && React.createElement(InnerBlocks, {
        template: [['core/paragraph', {}]]
      }), !setAttributes && React.createElement(InnerBlocks.Content, null)));
    }
  }]);

  return Container;
}(Component);

var _default = Container;
exports["default"] = _default;

},{"object-extender":2}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

/**
 * WordPress dependencies
 */
var applyFilters = wp.hooks.applyFilters;

var getDefault = function getDefault(key, args) {
  switch (key) {
    case 'settings':
      return applyFilters('divb.default.settings', {}, args);
  }
};

var _default = getDefault;
exports["default"] = _default;

},{}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var parseSerialized = function parseSerialized(str) {
  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var object = fallback;

  try {
    object = JSON.parse(str);
  } catch (e) {
    console.log(e);
    object = object;
  }

  return object;
};

var _default = parseSerialized;
exports["default"] = _default;

},{}]},{},[3]);
